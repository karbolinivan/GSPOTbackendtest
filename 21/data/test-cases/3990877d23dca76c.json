{"uid":"3990877d23dca76c","name":"Test payment accounts owner update invalid value param frozen_time","fullName":"tests.payments.payment_accounts.owner.field_frozen_time.test_payment_accounts_owner_frozen_time_put.TestPaymentPutOwnerRegression#test_payment_accounts_owner_positive_input_invalid_value_param_frozen_time_put","historyId":"768aed5a9b1dec33aa22474e6d47712a","time":{"start":1692895846669,"stop":1692895847178,"duration":509},"description":"Проверка ответа [400] при изменении frozen_time владельца невалидными значениями","descriptionHtml":"<p>Проверка ответа [400] при изменении frozen_time владельца невалидными значениями</p>\n","status":"skipped","statusMessage":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","statusTrace":"self = <test_payment_accounts_owner_frozen_time_put.TestPaymentPutOwnerRegression object at 0x7fd1da015ad0>\nvalue = ''\n\n    @allure.title('Test payment accounts owner update invalid value param frozen_time')\n    @allure.description('Проверка ответа [400] при изменении frozen_time владельца невалидными значениями')\n    @pytest.mark.parametrize(\"value\",\n                             [\"12 11:05:33.6666555765553\", \"%$!@#@\", \"frozen\", \"\", \"   \", \"11:2 5:45\", \"  11:25:45\",\n                              \"11:25:45  \"])\n    def test_payment_accounts_owner_positive_input_invalid_value_param_frozen_time_put(self, value):\n        \"\"\"Изменение параметра frozen_time владельца невалидными значениями\"\"\"\n        print(\"Запрос PUT\")\n        payload = {\n            \"commission\": \"10\",\n            \"frozen_time\": f'{value}',\n            \"gift_time\": \"5\",\n            \"payout_day_of_month\": 4\n        }\n        response = update_owner(json=payload)\n        if isinstance(value, str) and value == \"\":\n>           pytest.xfail(\"failing validation actual status code 200, expected status code 400\")\nE           _pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400\n\ntests/payments/payment_accounts/owner/field_frozen_time/test_payment_accounts_owner_frozen_time_put.py:57: XFailed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692895721954,"stop":1692895722103,"duration":149},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Проверка ответа [400] при изменении frozen_time владельца невалидными значениями","status":"skipped","statusMessage":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","statusTrace":"self = <test_payment_accounts_owner_frozen_time_put.TestPaymentPutOwnerRegression object at 0x7fd1da015ad0>\nvalue = ''\n\n    @allure.title('Test payment accounts owner update invalid value param frozen_time')\n    @allure.description('Проверка ответа [400] при изменении frozen_time владельца невалидными значениями')\n    @pytest.mark.parametrize(\"value\",\n                             [\"12 11:05:33.6666555765553\", \"%$!@#@\", \"frozen\", \"\", \"   \", \"11:2 5:45\", \"  11:25:45\",\n                              \"11:25:45  \"])\n    def test_payment_accounts_owner_positive_input_invalid_value_param_frozen_time_put(self, value):\n        \"\"\"Изменение параметра frozen_time владельца невалидными значениями\"\"\"\n        print(\"Запрос PUT\")\n        payload = {\n            \"commission\": \"10\",\n            \"frozen_time\": f'{value}',\n            \"gift_time\": \"5\",\n            \"payout_day_of_month\": 4\n        }\n        response = update_owner(json=payload)\n        if isinstance(value, str) and value == \"\":\n>           pytest.xfail(\"failing validation actual status code 200, expected status code 400\")\nE           _pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400\n\ntests/payments/payment_accounts/owner/field_frozen_time/test_payment_accounts_owner_frozen_time_put.py:57: XFailed","steps":[{"name":"Update owner","time":{"start":1692895846670,"stop":1692895847177,"duration":507},"status":"passed","steps":[{"name":"PUT request to:\n'https://payments.alpha.g-spot.website/api/v1/payment_accounts/owner/'","time":{"start":1692895846670,"stop":1692895847177,"duration":507},"status":"passed","steps":[],"attachments":[{"uid":"1b452dc13e402ea","name":"Logs","source":"1b452dc13e402ea.txt","type":"text/plain","size":925}],"parameters":[{"name":"url","value":"'https://payments.alpha.g-spot.website/api/v1/payment_accounts/owner/'"},{"name":"data","value":"None"},{"name":"json","value":"{'commission': '10', 'frozen_time': '', 'gift_time': '5', 'payout_day_of_month': 4}"},{"name":"params","value":"None"},{"name":"headers","value":"None"},{"name":"cookies","value":"None"},{"name":"auth","value":"None"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"json","value":"{'commission': '10', 'frozen_time': '', 'gift_time': '5', 'payout_day_of_month': 4}"}],"stepsCount":1,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"af57fd9129a4566b","name":"stdout","source":"af57fd9129a4566b.txt","type":"text/plain","size":17}],"parameters":[],"stepsCount":2,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"suite","value":"Test put owners regression"},{"name":"feature","value":"Payment accounts"},{"name":"story","value":"Owner"},{"name":"epic","value":"Payments"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.payments.payment_accounts.owner.field_frozen_time"},{"name":"subSuite","value":"TestPaymentPutOwnerRegression"},{"name":"host","value":"4a7b1454829c"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.payments.payment_accounts.owner.field_frozen_time.test_payment_accounts_owner_frozen_time_put"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"value","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":3,"passed":0,"unknown":0,"total":3},"items":[{"uid":"4e12679c0ed4b8a3","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/20//#testresult/4e12679c0ed4b8a3","status":"skipped","statusDetails":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","time":{"start":1692612283164,"stop":1692612283863,"duration":699}},{"uid":"729eae28afd52e10","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/19//#testresult/729eae28afd52e10","status":"skipped","statusDetails":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","time":{"start":1692359071317,"stop":1692359071739,"duration":422}}]},"tags":["regression"]},"source":"3990877d23dca76c.json","parameterValues":["''"]}