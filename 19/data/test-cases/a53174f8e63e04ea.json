{"uid":"a53174f8e63e04ea","name":"Test payment accounts owner partial update invalid value param frozen_time","fullName":"tests.payments.payment_accounts.owner.field_frozen_time.test_payment_accounts_owner_frozen_time_patch.TestPaymentPatchOwnerRegression#test_payment_accounts_owner_positive_input_invalid_value_param_frozen_time_patch","historyId":"d91d5b84f4adcd3231f53d35876740a1","time":{"start":1692359066025,"stop":1692359066524,"duration":499},"description":"Проверка ответа [400] при частичном обновлении frozen_time  невалидными значениями","descriptionHtml":"<p>Проверка ответа [400] при частичном обновлении frozen_time  невалидными значениями</p>\n","status":"skipped","statusMessage":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","statusTrace":"self = <test_payment_accounts_owner_frozen_time_patch.TestPaymentPatchOwnerRegression object at 0x7effb84bcb50>\nvalue = ''\n\n    @allure.title('Test payment accounts owner partial update invalid value param frozen_time')\n    @allure.description('Проверка ответа [400] при частичном обновлении frozen_time  невалидными значениями')\n    @pytest.mark.parametrize(\"value\", [\"12 11:05:33.6666555765553\", \"%$!@#@\", \"frozen\",\"\", \"   \", \"11:2 5:45\", \"  11:25:45\", \"11:25:45  \"])\n    def test_payment_accounts_owner_positive_input_invalid_value_param_frozen_time_patch(self, value):\n        \"\"\"Частичное обновление параметра frozen_time владельца невалидными значениями\"\"\"\n        print(\"Запрос PATCH\")\n        payload = {\n            \"commission\": \"10\",\n            \"frozen_time\": f'{value}',\n            \"gift_time\": \"5\",\n            \"payout_day_of_month\": 4\n        }\n        response = update_owner_partial(json=payload)\n        if isinstance(value, str) and value == \"\":\n>           pytest.xfail(\"failing validation actual status code 200, expected status code 400\")\nE           _pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400\n\ntests/payments/payment_accounts/owner/field_frozen_time/test_payment_accounts_owner_frozen_time_patch.py:55: XFailed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692358940886,"stop":1692358941017,"duration":131},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Проверка ответа [400] при частичном обновлении frozen_time  невалидными значениями","status":"skipped","statusMessage":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","statusTrace":"self = <test_payment_accounts_owner_frozen_time_patch.TestPaymentPatchOwnerRegression object at 0x7effb84bcb50>\nvalue = ''\n\n    @allure.title('Test payment accounts owner partial update invalid value param frozen_time')\n    @allure.description('Проверка ответа [400] при частичном обновлении frozen_time  невалидными значениями')\n    @pytest.mark.parametrize(\"value\", [\"12 11:05:33.6666555765553\", \"%$!@#@\", \"frozen\",\"\", \"   \", \"11:2 5:45\", \"  11:25:45\", \"11:25:45  \"])\n    def test_payment_accounts_owner_positive_input_invalid_value_param_frozen_time_patch(self, value):\n        \"\"\"Частичное обновление параметра frozen_time владельца невалидными значениями\"\"\"\n        print(\"Запрос PATCH\")\n        payload = {\n            \"commission\": \"10\",\n            \"frozen_time\": f'{value}',\n            \"gift_time\": \"5\",\n            \"payout_day_of_month\": 4\n        }\n        response = update_owner_partial(json=payload)\n        if isinstance(value, str) and value == \"\":\n>           pytest.xfail(\"failing validation actual status code 200, expected status code 400\")\nE           _pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400\n\ntests/payments/payment_accounts/owner/field_frozen_time/test_payment_accounts_owner_frozen_time_patch.py:55: XFailed","steps":[{"name":"Partial update owner","time":{"start":1692359066026,"stop":1692359066524,"duration":498},"status":"passed","steps":[{"name":"PATCH request to:\n'https://payments.alpha.g-spot.website/api/v1/payment_accounts/owner/'","time":{"start":1692359066026,"stop":1692359066524,"duration":498},"status":"passed","steps":[],"attachments":[{"uid":"62bc49d904f5d660","name":"Logs","source":"62bc49d904f5d660.txt","type":"text/plain","size":927}],"parameters":[{"name":"url","value":"'https://payments.alpha.g-spot.website/api/v1/payment_accounts/owner/'"},{"name":"data","value":"None"},{"name":"json","value":"{'commission': '10', 'frozen_time': '', 'gift_time': '5', 'payout_day_of_month': 4}"},{"name":"params","value":"None"},{"name":"headers","value":"None"},{"name":"cookies","value":"None"},{"name":"auth","value":"None"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"json","value":"{'commission': '10', 'frozen_time': '', 'gift_time': '5', 'payout_day_of_month': 4}"}],"stepsCount":1,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"7dee1d9464ddc0d4","name":"stdout","source":"7dee1d9464ddc0d4.txt","type":"text/plain","size":19}],"parameters":[],"stepsCount":2,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"suite","value":"Test patch owners regression"},{"name":"story","value":"Owner"},{"name":"epic","value":"Payments"},{"name":"feature","value":"Payment accounts"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.payments.payment_accounts.owner.field_frozen_time"},{"name":"subSuite","value":"TestPaymentPatchOwnerRegression"},{"name":"host","value":"6ef337d038cd"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.payments.payment_accounts.owner.field_frozen_time.test_payment_accounts_owner_frozen_time_patch"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"value","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["regression"]},"source":"a53174f8e63e04ea.json","parameterValues":["''"]}