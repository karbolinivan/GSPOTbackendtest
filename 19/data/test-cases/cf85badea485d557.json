{"uid":"cf85badea485d557","name":"TG102-Test filters genres list","fullName":"tests.games.utils.test_filters_genres.TestFiltersGenres#test_filters_genres_list","historyId":"ff4a56ec4e8d8197dc64191744e9bf34","time":{"start":1692359026549,"stop":1692359027296,"duration":747},"description":"Проверка успешного ответа [200] при запросе фильтра по жанру игр","descriptionHtml":"<p>Проверка успешного ответа [200] при запросе фильтра по жанру игр</p>\n","status":"skipped","statusMessage":"XFAIL The subgenre must contain required fields\n\nAttributeError: Could not map received object to pydantic model:\n[\n  {\n    \"loc\": [\n      \"subgenre\"\n    ],\n    \"msg\": \"field required\",\n    \"type\": \"value_error.missing\"\n  }\n]","statusTrace":"actual = [{'id': 834, 'name': 'decade', 'subgenres': []}, {'id': 835, 'name': 'hotel', 'subgenres': []}, {'id': 836, 'name': 'c...ubgenres': []}, {'id': 838, 'name': 'picture', 'subgenres': []}, {'id': 799, 'name': 'military', 'subgenres': []}, ...]\nmodel = <class 'source.schemas.games.genre_games.GenreGames'>\n\n    @staticmethod\n    @allure.step('Assertion json by the model')\n    def json_by_model(actual, model):\n        try:\n            if isinstance(actual, list):\n                for item in actual:\n>                   model(**item)\n\nsource/base/validator.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   pydantic.error_wrappers.ValidationError: 1 validation error for GenreGames\nE   subgenre\nE     field required (type=value_error.missing)\n\npydantic/main.py:341: ValidationError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.games.utils.test_filters_genres.TestFiltersGenres object at 0x7effb8448d10>\n\n    @allure.title(f'{Cases.GAMES[\"TG102\"][\"id\"]}-Test filters genres list')\n    @allure.description('Проверка успешного ответа [200] при запросе фильтра по жанру игр')\n    @allure.testcase(name=Cases.GAMES[\"TG102\"][\"name\"], url=Cases.GAMES[\"TG102\"][\"link\"])\n    def test_filters_genres_list(self):\n        response = filters.genres_list()\n        assertions.status_code(actual=response.status_code, expected=200)\n>       assertions.json_by_model(actual=response.json(), model=GenreGames)\n\ntests/games/utils/test_filters_genres.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nactual = [{'id': 834, 'name': 'decade', 'subgenres': []}, {'id': 835, 'name': 'hotel', 'subgenres': []}, {'id': 836, 'name': 'c...ubgenres': []}, {'id': 838, 'name': 'picture', 'subgenres': []}, {'id': 799, 'name': 'military', 'subgenres': []}, ...]\nmodel = <class 'source.schemas.games.genre_games.GenreGames'>\n\n    @staticmethod\n    @allure.step('Assertion json by the model')\n    def json_by_model(actual, model):\n        try:\n            if isinstance(actual, list):\n                for item in actual:\n                    model(**item)\n            else:\n                model(**actual)\n        except ValidationError as e:\n>           raise AttributeError(f\"Could not map received object to pydantic model:\\n{e.json()}\")\nE           AttributeError: Could not map received object to pydantic model:\nE           [\nE             {\nE               \"loc\": [\nE                 \"subgenre\"\nE               ],\nE               \"msg\": \"field required\",\nE               \"type\": \"value_error.missing\"\nE             }\nE           ]\n\nsource/base/validator.py:76: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692358940886,"stop":1692358941017,"duration":131},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Проверка успешного ответа [200] при запросе фильтра по жанру игр","status":"skipped","statusMessage":"XFAIL The subgenre must contain required fields\n\nAttributeError: Could not map received object to pydantic model:\n[\n  {\n    \"loc\": [\n      \"subgenre\"\n    ],\n    \"msg\": \"field required\",\n    \"type\": \"value_error.missing\"\n  }\n]","statusTrace":"actual = [{'id': 834, 'name': 'decade', 'subgenres': []}, {'id': 835, 'name': 'hotel', 'subgenres': []}, {'id': 836, 'name': 'c...ubgenres': []}, {'id': 838, 'name': 'picture', 'subgenres': []}, {'id': 799, 'name': 'military', 'subgenres': []}, ...]\nmodel = <class 'source.schemas.games.genre_games.GenreGames'>\n\n    @staticmethod\n    @allure.step('Assertion json by the model')\n    def json_by_model(actual, model):\n        try:\n            if isinstance(actual, list):\n                for item in actual:\n>                   model(**item)\n\nsource/base/validator.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   pydantic.error_wrappers.ValidationError: 1 validation error for GenreGames\nE   subgenre\nE     field required (type=value_error.missing)\n\npydantic/main.py:341: ValidationError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.games.utils.test_filters_genres.TestFiltersGenres object at 0x7effb8448d10>\n\n    @allure.title(f'{Cases.GAMES[\"TG102\"][\"id\"]}-Test filters genres list')\n    @allure.description('Проверка успешного ответа [200] при запросе фильтра по жанру игр')\n    @allure.testcase(name=Cases.GAMES[\"TG102\"][\"name\"], url=Cases.GAMES[\"TG102\"][\"link\"])\n    def test_filters_genres_list(self):\n        response = filters.genres_list()\n        assertions.status_code(actual=response.status_code, expected=200)\n>       assertions.json_by_model(actual=response.json(), model=GenreGames)\n\ntests/games/utils/test_filters_genres.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nactual = [{'id': 834, 'name': 'decade', 'subgenres': []}, {'id': 835, 'name': 'hotel', 'subgenres': []}, {'id': 836, 'name': 'c...ubgenres': []}, {'id': 838, 'name': 'picture', 'subgenres': []}, {'id': 799, 'name': 'military', 'subgenres': []}, ...]\nmodel = <class 'source.schemas.games.genre_games.GenreGames'>\n\n    @staticmethod\n    @allure.step('Assertion json by the model')\n    def json_by_model(actual, model):\n        try:\n            if isinstance(actual, list):\n                for item in actual:\n                    model(**item)\n            else:\n                model(**actual)\n        except ValidationError as e:\n>           raise AttributeError(f\"Could not map received object to pydantic model:\\n{e.json()}\")\nE           AttributeError: Could not map received object to pydantic model:\nE           [\nE             {\nE               \"loc\": [\nE                 \"subgenre\"\nE               ],\nE               \"msg\": \"field required\",\nE               \"type\": \"value_error.missing\"\nE             }\nE           ]\n\nsource/base/validator.py:76: AttributeError","steps":[{"name":"Get filters genres list","time":{"start":1692359026549,"stop":1692359027295,"duration":746},"status":"passed","steps":[{"name":"GET request to:\n'https://games.alpha.g-spot.website/api/v1/utils/filters/genres'","time":{"start":1692359026549,"stop":1692359027295,"duration":746},"status":"passed","steps":[],"attachments":[{"uid":"13ba5c4de0b15117","name":"Logs","source":"13ba5c4de0b15117.txt","type":"text/plain","size":3176}],"parameters":[{"name":"url","value":"'https://games.alpha.g-spot.website/api/v1/utils/filters/genres'"},{"name":"params","value":"{'limit': None, 'offset': None}"},{"name":"headers","value":"None"},{"name":"cookies","value":"None"},{"name":"auth","value":"('tester', 'tester')"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"limit","value":"None"},{"name":"offset","value":"None"}],"stepsCount":1,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assertion of a status code","time":{"start":1692359027295,"stop":1692359027295,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"200"},{"name":"expected","value":"200"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assertion json by the model","time":{"start":1692359027295,"stop":1692359027295,"duration":0},"status":"broken","statusMessage":"AttributeError: Could not map received object to pydantic model:\n[\n  {\n    \"loc\": [\n      \"subgenre\"\n    ],\n    \"msg\": \"field required\",\n    \"type\": \"value_error.missing\"\n  }\n]\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/project/source/base/validator.py\", line 76, in json_by_model\n    raise AttributeError(f\"Could not map received object to pydantic model:\\n{e.json()}\")\n","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"[{'id': 834, 'name': 'decade', 'subgenres': []}, {'id': 835, 'name': 'hotel', 'subgenres': []}, {'id': 836, 'name': 'compare', 'subgenres': []}, {'id': 837, 'name': 'great', 'subgenres': []}, {'id': 838, 'name': 'picture', 'subgenres': []}, {'id': 799, 'name': 'military', 'subgenres': []}, {'id': 800, 'name': 'claim', 'subgenres': []}, {'id': 801, 'name': 'money', 'subgenres': []}, {'id': 802, 'name': 'scene', 'subgenres': []}, {'id': 803, 'name': 'adult', 'subgenres': []}, {'id': 938, 'name': 'loyalty', 'subgenres': []}, {'id': 941, 'name': 'Cambridgeshire', 'subgenres': []}, {'id': 575, 'name': 'CSS', 'subgenres': []}, {'id': 100, 'name': '!@#$', 'subgenres': []}, {'id': 101, 'name': '下来顔文字', 'subgenres': []}, {'id': 102, 'name': 'Հայկականتحتاجفقطإلىنسخלבדוק', 'subgenres': []}, {'id': 103, 'name': 'En Ru', 'subgenres': []}, {'id': 105, 'name': 'SHOTter', 'subgenres': []}, {'id': 106, 'name': 'пазл', 'subgenres': []}, {'id': 107, 'name': 'Приключения', 'subgenres': []}, {'id': 108, 'name': 'mystery', 'subgenres': []}, {'id': 109, 'name': '0123456789', 'subgenres': []}, {'id': 110, 'name': 'приключения', 'subgenres': []}, {'id': 111, 'name': 'инди', 'subgenres': []}, {'id': 112, 'name': 'Пиксельная графика', 'subgenres': []}, {'id': 113, 'name': 'Point&Click', 'subgenres': []}, {'id': 114, 'name': '~!@#$%^&()_+!“№;%:?()_+/,?><:”}{[];’,./<>', 'subgenres': []}, {'id': 115, 'name': '\uD83D\uDE00', 'subgenres': []}, {'id': 851, 'name': 'Directives', 'subgenres': []}, {'id': 726, 'name': 'Executive', 'subgenres': []}, {'id': 734, 'name': 'Cotton', 'subgenres': []}, {'id': 735, 'name': 'Avon', 'subgenres': []}, {'id': 957, 'name': 'genre_for_products', 'subgenres': []}, {'id': 737, 'name': 'Home', 'subgenres': []}, {'id': 738, 'name': 'TCP', 'subgenres': []}]"},{"name":"model","value":"<class 'source.schemas.games.genre_games.GenreGames'>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"Games"},{"name":"feature","value":"Utils"},{"name":"suite","value":"Test get filters genres list"},{"name":"story","value":"Filter by genre"},{"name":"tag","value":"@pytest.mark.xfail(reason='The subgenre must contain required fields')"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests.games.utils"},{"name":"subSuite","value":"TestFiltersGenres"},{"name":"host","value":"6ef337d038cd"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.games.utils.test_filters_genres"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"utils_filters_genres_get.md","url":"https://github.com/victoretc/GSPOTtestingdocumentation/blob/main/games/utils/utils_filters_genres_get.md","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":7,"passed":0,"unknown":0,"total":7},"items":[{"uid":"6aef3375b9843e47","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/16//#testresult/6aef3375b9843e47","status":"skipped","statusDetails":"XFAIL The subgenre must contain required fields\n\nAttributeError: Could not map received object to pydantic model:\n[\n  {\n    \"loc\": [\n      \"subgenre\"\n    ],\n    \"msg\": \"field required\",\n    \"type\": \"value_error.missing\"\n  }\n]","time":{"start":1691402603965,"stop":1691402604791,"duration":826}},{"uid":"5ea652418ebc183f","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/15//#testresult/5ea652418ebc183f","status":"skipped","statusDetails":"XFAIL The subgenre must contain required fields\n\nAttributeError: Could not map received object to pydantic model:\n[\n  {\n    \"loc\": [\n      \"subgenre\"\n    ],\n    \"msg\": \"field required\",\n    \"type\": \"value_error.missing\"\n  }\n]","time":{"start":1691153306949,"stop":1691153307637,"duration":688}},{"uid":"8a8164a3fb316759","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/14//#testresult/8a8164a3fb316759","status":"skipped","statusDetails":"XFAIL The subgenre must contain required fields\n\nAttributeError: Could not map received object to pydantic model:\n[\n  {\n    \"loc\": [\n      \"subgenre\"\n    ],\n    \"msg\": \"field required\",\n    \"type\": \"value_error.missing\"\n  }\n]","time":{"start":1690906834449,"stop":1690906835328,"duration":879}},{"uid":"8c3baa3eecbcfc76","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/13//#testresult/8c3baa3eecbcfc76","status":"skipped","statusDetails":"XFAIL The subgenre must contain required fields\n\nAttributeError: Could not map received object to pydantic model:\n[\n  {\n    \"loc\": [\n      \"subgenre\"\n    ],\n    \"msg\": \"field required\",\n    \"type\": \"value_error.missing\"\n  }\n]","time":{"start":1690797821656,"stop":1690797822593,"duration":937}},{"uid":"5bd1ddfa195c88cf","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/12//#testresult/5bd1ddfa195c88cf","status":"skipped","statusDetails":"XFAIL The subgenre must contain required fields\n\nAttributeError: Could not map received object to pydantic model:\n[\n  {\n    \"loc\": [\n      \"subgenre\"\n    ],\n    \"msg\": \"field required\",\n    \"type\": \"value_error.missing\"\n  }\n]","time":{"start":1690751694893,"stop":1690751695885,"duration":992}},{"uid":"53831f85497451b0","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/11//#testresult/53831f85497451b0","status":"skipped","statusDetails":"XFAIL The subgenre must contain required fields\n\nAttributeError: Could not map received object to pydantic model:\n[\n  {\n    \"loc\": [\n      \"subgenre\"\n    ],\n    \"msg\": \"field required\",\n    \"type\": \"value_error.missing\"\n  }\n]","time":{"start":1690660452818,"stop":1690660453542,"duration":724}}]},"tags":["@pytest.mark.xfail(reason='The subgenre must contain required fields')","smoke"]},"source":"cf85badea485d557.json","parameterValues":[]}