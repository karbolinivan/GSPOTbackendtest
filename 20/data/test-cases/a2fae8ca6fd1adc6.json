{"uid":"a2fae8ca6fd1adc6","name":"Test payment accounts owner update invalid value param gift_time","fullName":"tests.payments.payment_accounts.owner.field_gift_time.test_payment_accounts_owner_gift_time_put.TestPaymentPutOwnerRegression#test_payment_accounts_owner_positive_input_invalid_value_param_gift_time_put","historyId":"01aba4a8dafb11a9f57344857023387a","time":{"start":1692612298534,"stop":1692612299183,"duration":649},"description":"Проверка ответа [400] при изменении gift_time владельца невалидными значениями","descriptionHtml":"<p>Проверка ответа [400] при изменении gift_time владельца невалидными значениями</p>\n","status":"skipped","statusMessage":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","statusTrace":"self = <test_payment_accounts_owner_gift_time_put.TestPaymentPutOwnerRegression object at 0x7f8f43a30a50>\nvalue = ''\n\n    @allure.title('Test payment accounts owner update invalid value param gift_time')\n    @allure.description('Проверка ответа [400] при изменении gift_time владельца невалидными значениями')\n    @pytest.mark.parametrize(\"value\", [\"12 11:05:33.6666555765553\", \"%$!@#@\", \"frozen\",\"\", \"   \", \"11:2 5:45\", \"  11:25:45\", \"11:25:45  \"])\n    def test_payment_accounts_owner_positive_input_invalid_value_param_gift_time_put(self, value):\n        \"\"\"Изменение параметра gift_time владельца невалидными значениями\"\"\"\n        print(\"Запрос PUT\")\n        payload = {\n            \"commission\": \"10\",\n            \"frozen_time\": \"12:15:44\",\n            \"gift_time\": f'{value}',\n            \"payout_day_of_month\": 4\n        }\n        response = update_owner(json=payload)\n        if isinstance(value, str) and value == \"\":\n>           pytest.xfail(\"failing validation actual status code 200, expected status code 400\")\nE           _pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400\n\ntests/payments/payment_accounts/owner/field_gift_time/test_payment_accounts_owner_gift_time_put.py:55: XFailed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692612113719,"stop":1692612113836,"duration":117},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Проверка ответа [400] при изменении gift_time владельца невалидными значениями","status":"skipped","statusMessage":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","statusTrace":"self = <test_payment_accounts_owner_gift_time_put.TestPaymentPutOwnerRegression object at 0x7f8f43a30a50>\nvalue = ''\n\n    @allure.title('Test payment accounts owner update invalid value param gift_time')\n    @allure.description('Проверка ответа [400] при изменении gift_time владельца невалидными значениями')\n    @pytest.mark.parametrize(\"value\", [\"12 11:05:33.6666555765553\", \"%$!@#@\", \"frozen\",\"\", \"   \", \"11:2 5:45\", \"  11:25:45\", \"11:25:45  \"])\n    def test_payment_accounts_owner_positive_input_invalid_value_param_gift_time_put(self, value):\n        \"\"\"Изменение параметра gift_time владельца невалидными значениями\"\"\"\n        print(\"Запрос PUT\")\n        payload = {\n            \"commission\": \"10\",\n            \"frozen_time\": \"12:15:44\",\n            \"gift_time\": f'{value}',\n            \"payout_day_of_month\": 4\n        }\n        response = update_owner(json=payload)\n        if isinstance(value, str) and value == \"\":\n>           pytest.xfail(\"failing validation actual status code 200, expected status code 400\")\nE           _pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400\n\ntests/payments/payment_accounts/owner/field_gift_time/test_payment_accounts_owner_gift_time_put.py:55: XFailed","steps":[{"name":"Update owner","time":{"start":1692612298534,"stop":1692612299183,"duration":649},"status":"passed","steps":[{"name":"PUT request to:\n'https://payments.alpha.g-spot.website/api/v1/payment_accounts/owner/'","time":{"start":1692612298534,"stop":1692612299183,"duration":649},"status":"passed","steps":[],"attachments":[{"uid":"80ccf0f7d3dc43b","name":"Logs","source":"80ccf0f7d3dc43b.txt","type":"text/plain","size":932}],"parameters":[{"name":"url","value":"'https://payments.alpha.g-spot.website/api/v1/payment_accounts/owner/'"},{"name":"data","value":"None"},{"name":"json","value":"{'commission': '10', 'frozen_time': '12:15:44', 'gift_time': '', 'payout_day_of_month': 4}"},{"name":"params","value":"None"},{"name":"headers","value":"None"},{"name":"cookies","value":"None"},{"name":"auth","value":"None"}],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"json","value":"{'commission': '10', 'frozen_time': '12:15:44', 'gift_time': '', 'payout_day_of_month': 4}"}],"stepsCount":1,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"3456d990184a043d","name":"stdout","source":"3456d990184a043d.txt","type":"text/plain","size":17}],"parameters":[],"stepsCount":2,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"Payment accounts"},{"name":"suite","value":"Test put owners regression"},{"name":"epic","value":"Payments"},{"name":"story","value":"Owner"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.payments.payment_accounts.owner.field_gift_time"},{"name":"subSuite","value":"TestPaymentPutOwnerRegression"},{"name":"host","value":"8c47c01d477a"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.payments.payment_accounts.owner.field_gift_time.test_payment_accounts_owner_gift_time_put"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"value","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":2,"passed":0,"unknown":0,"total":2},"items":[{"uid":"59406d4ce5bf9752","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/19//#testresult/59406d4ce5bf9752","status":"skipped","statusDetails":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","time":{"start":1692359081783,"stop":1692359082180,"duration":397}}]},"tags":["regression"]},"source":"a2fae8ca6fd1adc6.json","parameterValues":["''"]}