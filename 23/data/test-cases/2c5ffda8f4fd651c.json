{"uid":"2c5ffda8f4fd651c","name":"Test payment accounts owner partial update invalid value param frozen_time","fullName":"tests.payments.payment_accounts.owner.field_frozen_time.test_payment_accounts_owner_frozen_time_patch.TestPaymentPatchOwnerRegression#test_payment_accounts_owner_positive_input_invalid_value_param_frozen_time_patch","historyId":"d91d5b84f4adcd3231f53d35876740a1","time":{"start":1693821889133,"stop":1693821889636,"duration":503},"description":"Проверка ответа [400] при частичном обновлении frozen_time  невалидными значениями","descriptionHtml":"<p>Проверка ответа [400] при частичном обновлении frozen_time  невалидными значениями</p>\n","status":"skipped","statusMessage":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","statusTrace":"self = <test_payment_accounts_owner_frozen_time_patch.TestPaymentPatchOwnerRegression object at 0x7f10a6954950>\nvalue = ''\n\n    @allure.title('Test payment accounts owner partial update invalid value param frozen_time')\n    @allure.description('Проверка ответа [400] при частичном обновлении frozen_time  невалидными значениями')\n    @pytest.mark.parametrize(\"value\",\n                             [\"12 11:05:33.6666555765553\", \"%$!@#@\", \"frozen\", \"\", \"   \", \"11:2 5:45\", \"  11:25:45\",\n                              \"11:25:45  \"])\n    def test_payment_accounts_owner_positive_input_invalid_value_param_frozen_time_patch(self, value):\n        \"\"\"Частичное обновление параметра frozen_time владельца невалидными значениями\"\"\"\n        print(\"Запрос PATCH\")\n        payload = {\n            \"commission\": \"10\",\n            \"frozen_time\": f'{value}',\n            \"gift_time\": \"5\",\n            \"payout_day_of_month\": 4\n        }\n        response = update_owner_partial(json=payload)\n        if isinstance(value, str) and value == \"\":\n>           pytest.xfail(\"failing validation actual status code 200, expected status code 400\")\nE           _pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400\n\ntests/payments/payment_accounts/owner/field_frozen_time/test_payment_accounts_owner_frozen_time_patch.py:57: XFailed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1693821734728,"stop":1693821734853,"duration":125},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Проверка ответа [400] при частичном обновлении frozen_time  невалидными значениями","status":"skipped","statusMessage":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","statusTrace":"self = <test_payment_accounts_owner_frozen_time_patch.TestPaymentPatchOwnerRegression object at 0x7f10a6954950>\nvalue = ''\n\n    @allure.title('Test payment accounts owner partial update invalid value param frozen_time')\n    @allure.description('Проверка ответа [400] при частичном обновлении frozen_time  невалидными значениями')\n    @pytest.mark.parametrize(\"value\",\n                             [\"12 11:05:33.6666555765553\", \"%$!@#@\", \"frozen\", \"\", \"   \", \"11:2 5:45\", \"  11:25:45\",\n                              \"11:25:45  \"])\n    def test_payment_accounts_owner_positive_input_invalid_value_param_frozen_time_patch(self, value):\n        \"\"\"Частичное обновление параметра frozen_time владельца невалидными значениями\"\"\"\n        print(\"Запрос PATCH\")\n        payload = {\n            \"commission\": \"10\",\n            \"frozen_time\": f'{value}',\n            \"gift_time\": \"5\",\n            \"payout_day_of_month\": 4\n        }\n        response = update_owner_partial(json=payload)\n        if isinstance(value, str) and value == \"\":\n>           pytest.xfail(\"failing validation actual status code 200, expected status code 400\")\nE           _pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400\n\ntests/payments/payment_accounts/owner/field_frozen_time/test_payment_accounts_owner_frozen_time_patch.py:57: XFailed","steps":[{"name":"Partial update owner","time":{"start":1693821889134,"stop":1693821889636,"duration":502},"status":"passed","steps":[{"name":"PATCH request to:\n'https://payments.alpha.g-spot.website/api/v1/payment_accounts/owner/'","time":{"start":1693821889134,"stop":1693821889636,"duration":502},"status":"passed","steps":[],"attachments":[{"uid":"75066b64b65f5dbe","name":"Logs","source":"75066b64b65f5dbe.txt","type":"text/plain","size":927}],"parameters":[{"name":"url","value":"'https://payments.alpha.g-spot.website/api/v1/payment_accounts/owner/'"},{"name":"data","value":"None"},{"name":"json","value":"{'commission': '10', 'frozen_time': '', 'gift_time': '5', 'payout_day_of_month': 4}"},{"name":"params","value":"None"},{"name":"headers","value":"None"},{"name":"cookies","value":"None"},{"name":"auth","value":"None"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[{"name":"json","value":"{'commission': '10', 'frozen_time': '', 'gift_time': '5', 'payout_day_of_month': 4}"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true}],"attachments":[{"uid":"a1659a841f0f740c","name":"stdout","source":"a1659a841f0f740c.txt","type":"text/plain","size":19}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"Owner"},{"name":"feature","value":"Payment accounts"},{"name":"suite","value":"Test patch owners regression"},{"name":"epic","value":"Payments"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.payments.payment_accounts.owner.field_frozen_time"},{"name":"subSuite","value":"TestPaymentPatchOwnerRegression"},{"name":"host","value":"21aedc7e375f"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.payments.payment_accounts.owner.field_frozen_time.test_payment_accounts_owner_frozen_time_patch"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"value","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":5,"passed":0,"unknown":0,"total":5},"items":[{"uid":"93ad17c8d86eea7a","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/22//#testresult/93ad17c8d86eea7a","status":"skipped","statusDetails":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","time":{"start":1693217021355,"stop":1693217021772,"duration":417}},{"uid":"a6325f4acb466ac7","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/21//#testresult/a6325f4acb466ac7","status":"skipped","statusDetails":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","time":{"start":1692895841473,"stop":1692895841856,"duration":383}},{"uid":"521ef6f653099244","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/20//#testresult/521ef6f653099244","status":"skipped","statusDetails":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","time":{"start":1692612275477,"stop":1692612276080,"duration":603}},{"uid":"a53174f8e63e04ea","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/19//#testresult/a53174f8e63e04ea","status":"skipped","statusDetails":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","time":{"start":1692359066025,"stop":1692359066524,"duration":499}}]},"tags":["regression"]},"source":"2c5ffda8f4fd651c.json","parameterValues":["''"]}