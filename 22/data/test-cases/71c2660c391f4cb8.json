{"uid":"71c2660c391f4cb8","name":"Test payment accounts owner partial update invalid value param gift_time","fullName":"tests.payments.payment_accounts.owner.field_gift_time.test_payment_accounts_owner_gift_time_patch.TestPaymentPatchOwnerRegression#test_payment_accounts_owner_positive_input_invalid_value_param_gift_time_patch","historyId":"6f4ba23fcea493f1f96a8595043c8052","time":{"start":1693217031474,"stop":1693217031892,"duration":418},"description":"Проверка ответа [400] при частичном обновлении gift_time невалидными значениями","descriptionHtml":"<p>Проверка ответа [400] при частичном обновлении gift_time невалидными значениями</p>\n","status":"skipped","statusMessage":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","statusTrace":"self = <test_payment_accounts_owner_gift_time_patch.TestPaymentPatchOwnerRegression object at 0x7f80d0cc7590>\nvalue = ''\n\n    @allure.title('Test payment accounts owner partial update invalid value param gift_time')\n    @allure.description('Проверка ответа [400] при частичном обновлении gift_time невалидными значениями')\n    @pytest.mark.parametrize(\"value\",\n                             [\"12 11:05:33.6666555765553\", \"%$!@#@\", \"frozen\", \"\", \"   \", \"11:2 5:45\", \"  11:25:45\",\n                              \"11:25:45  \"])\n    def test_payment_accounts_owner_positive_input_invalid_value_param_gift_time_patch(self, value):\n        \"\"\"Частичное обновление параметра gift_time владельца невалидными значениями\"\"\"\n        print(\"Запрос PATCH\")\n        payload = {\n            \"commission\": \"10\",\n            \"frozen_time\": \"12:15:44\",\n            \"gift_time\": f'{value}',\n            \"payout_day_of_month\": 4\n        }\n        response = update_owner_partial(json=payload)\n        if isinstance(value, str) and value == \"\":\n>           pytest.xfail(\"failing validation actual status code 200, expected status code 400\")\nE           _pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400\n\ntests/payments/payment_accounts/owner/field_gift_time/test_payment_accounts_owner_gift_time_patch.py:57: XFailed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1693216906115,"stop":1693216906241,"duration":126},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0}],"testStage":{"description":"Проверка ответа [400] при частичном обновлении gift_time невалидными значениями","status":"skipped","statusMessage":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","statusTrace":"self = <test_payment_accounts_owner_gift_time_patch.TestPaymentPatchOwnerRegression object at 0x7f80d0cc7590>\nvalue = ''\n\n    @allure.title('Test payment accounts owner partial update invalid value param gift_time')\n    @allure.description('Проверка ответа [400] при частичном обновлении gift_time невалидными значениями')\n    @pytest.mark.parametrize(\"value\",\n                             [\"12 11:05:33.6666555765553\", \"%$!@#@\", \"frozen\", \"\", \"   \", \"11:2 5:45\", \"  11:25:45\",\n                              \"11:25:45  \"])\n    def test_payment_accounts_owner_positive_input_invalid_value_param_gift_time_patch(self, value):\n        \"\"\"Частичное обновление параметра gift_time владельца невалидными значениями\"\"\"\n        print(\"Запрос PATCH\")\n        payload = {\n            \"commission\": \"10\",\n            \"frozen_time\": \"12:15:44\",\n            \"gift_time\": f'{value}',\n            \"payout_day_of_month\": 4\n        }\n        response = update_owner_partial(json=payload)\n        if isinstance(value, str) and value == \"\":\n>           pytest.xfail(\"failing validation actual status code 200, expected status code 400\")\nE           _pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400\n\ntests/payments/payment_accounts/owner/field_gift_time/test_payment_accounts_owner_gift_time_patch.py:57: XFailed","steps":[{"name":"Partial update owner","time":{"start":1693217031474,"stop":1693217031891,"duration":417},"status":"passed","steps":[{"name":"PATCH request to:\n'https://payments.alpha.g-spot.website/api/v1/payment_accounts/owner/'","time":{"start":1693217031474,"stop":1693217031891,"duration":417},"status":"passed","steps":[],"attachments":[{"uid":"8fddf36676291c2b","name":"Logs","source":"8fddf36676291c2b.txt","type":"text/plain","size":934}],"parameters":[{"name":"url","value":"'https://payments.alpha.g-spot.website/api/v1/payment_accounts/owner/'"},{"name":"data","value":"None"},{"name":"json","value":"{'commission': '10', 'frozen_time': '12:15:44', 'gift_time': '', 'payout_day_of_month': 4}"},{"name":"params","value":"None"},{"name":"headers","value":"None"},{"name":"cookies","value":"None"},{"name":"auth","value":"None"}],"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0,"attachmentsCount":1}],"attachments":[],"parameters":[{"name":"json","value":"{'commission': '10', 'frozen_time': '12:15:44', 'gift_time': '', 'payout_day_of_month': 4}"}],"shouldDisplayMessage":false,"hasContent":true,"stepsCount":1,"attachmentsCount":1}],"attachments":[{"uid":"8c4c6d488f02c643","name":"stdout","source":"8c4c6d488f02c643.txt","type":"text/plain","size":19}],"parameters":[],"shouldDisplayMessage":true,"hasContent":true,"stepsCount":2,"attachmentsCount":2},"afterStages":[],"labels":[{"name":"feature","value":"Payment accounts"},{"name":"story","value":"Owner"},{"name":"epic","value":"Payments"},{"name":"suite","value":"Test patch owners regression"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.payments.payment_accounts.owner.field_gift_time"},{"name":"subSuite","value":"TestPaymentPatchOwnerRegression"},{"name":"host","value":"3b39dcdf8748"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.payments.payment_accounts.owner.field_gift_time.test_payment_accounts_owner_gift_time_patch"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"value","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":4,"passed":0,"unknown":0,"total":4},"items":[{"uid":"16f93e3c0f582845","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/21//#testresult/16f93e3c0f582845","status":"skipped","statusDetails":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","time":{"start":1692895852348,"stop":1692895852816,"duration":468}},{"uid":"2b7d620a712bbf71","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/20//#testresult/2b7d620a712bbf71","status":"skipped","statusDetails":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","time":{"start":1692612290897,"stop":1692612291522,"duration":625}},{"uid":"4a0ff8cb0a6b2f23","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/19//#testresult/4a0ff8cb0a6b2f23","status":"skipped","statusDetails":"XFAIL reason: failing validation actual status code 200, expected status code 400\n\n_pytest.outcomes.XFailed: failing validation actual status code 200, expected status code 400","time":{"start":1692359076529,"stop":1692359076953,"duration":424}}]},"tags":["regression"]},"source":"71c2660c391f4cb8.json","parameterValues":["''"]}