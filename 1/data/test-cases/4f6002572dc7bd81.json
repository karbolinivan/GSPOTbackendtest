{"uid":"4f6002572dc7bd81","name":"Test languages update with invalid value","fullName":"tests.games.reference.languages.test_put_languages.TestLanguagesUpdateRegression#test_languages_update_with_invalid_name","historyId":"4e75a4d5c8b644e5a219518c7ac8799d","time":{"start":1689954967041,"stop":1689954968043,"duration":1002},"description":"Проверка ответа [400] при обновлении языка с невалидным значением ","descriptionHtml":"<p>Проверка ответа [400] при обновлении языка с невалидным значением</p>\n","status":"failed","statusMessage":"AssertionError: json is not equal to json.\nResponse: {'name': ['Это поле не может быть пустым.']}","statusTrace":"self = <tests.games.reference.languages.test_put_languages.TestLanguagesUpdateRegression object at 0x7f7e39952bd0>\nvalue = '', create_delete_test_languages = <Response [201]>\n\n    @allure.title('Test languages update with invalid value')\n    @allure.description('Проверка ответа [400] при обновлении языка с невалидным значением ')\n    @pytest.mark.parametrize(\"value\", ['', '   '])\n    def test_languages_update_with_invalid_name(self, value, create_delete_test_languages):\n        id_test = create_delete_test_languages.json().get('id')\n    \n        payload = Generator.object(model=Language, name=value)\n        response = update_languages(id_data=id_test, json=payload)\n    \n        expected = ExpectedJSON.key_value(key='name', value=ExpectedJSON.FIELD_CANNOT_BE_EMPTY.value)\n        assert_status_code(response=response, expected=400)\n>       assert_json_equal_json(response=response, json=expected)\n\ntests/games/reference/languages/test_put_languages.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/base/validator.py:58: in assert_json_equal_json\n    return Assertion(response=response).assert_json_equal_json(json=json)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <source.base.validator.Assertion object at 0x7f7e38d506d0>\njson = {'name': ['This field may not be blank']}\n\n    @allure.step('Assertion of a json equal json')\n    def assert_json_equal_json(self, json):\n>       assert self.response.json() == json, f'{GlobalError.INVALID_JSON}.\\n'\\\n                                             f'Response: {self.response.json()}'\nE       AssertionError: json is not equal to json.\nE       Response: {'name': ['Это поле не может быть пустым.']}\n\nsource/base/validator.py:37: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1689954905555,"stop":1689954905672,"duration":117},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_delete_test_languages","time":{"start":1689954966190,"stop":1689954967040,"duration":850},"status":"passed","steps":[{"name":"Generating data based on json model <class 'source.schemas.laguage_schema.Language'>","time":{"start":1689954966190,"stop":1689954966213,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"model","value":"<class 'source.schemas.laguage_schema.Language'>"},{"name":"lang","value":"None"},{"name":"seed","value":"None"},{"name":"include","value":"None"},{"name":"exclude","value":"None"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Create a language","time":{"start":1689954966213,"stop":1689954967039,"duration":826},"status":"passed","steps":[{"name":"POST request to 'https://games.alpha.g-spot.website/api/v1/reference/languages/'","time":{"start":1689954966213,"stop":1689954967039,"duration":826},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://games.alpha.g-spot.website/api/v1/reference/languages/'"},{"name":"data","value":"None"},{"name":"json","value":"{'name': 'size'}"},{"name":"params","value":"None"},{"name":"headers","value":"None"},{"name":"cookies","value":"None"},{"name":"auth","value":"('tester', 'tester')"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"json","value":"{'name': 'size'}"},{"name":"auth","value":"('tester', 'tester')"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assertion of a status code","time":{"start":1689954967040,"stop":1689954967040,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"expected","value":"201"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"Проверка ответа [400] при обновлении языка с невалидным значением ","status":"failed","statusMessage":"AssertionError: json is not equal to json.\nResponse: {'name': ['Это поле не может быть пустым.']}","statusTrace":"self = <tests.games.reference.languages.test_put_languages.TestLanguagesUpdateRegression object at 0x7f7e39952bd0>\nvalue = '', create_delete_test_languages = <Response [201]>\n\n    @allure.title('Test languages update with invalid value')\n    @allure.description('Проверка ответа [400] при обновлении языка с невалидным значением ')\n    @pytest.mark.parametrize(\"value\", ['', '   '])\n    def test_languages_update_with_invalid_name(self, value, create_delete_test_languages):\n        id_test = create_delete_test_languages.json().get('id')\n    \n        payload = Generator.object(model=Language, name=value)\n        response = update_languages(id_data=id_test, json=payload)\n    \n        expected = ExpectedJSON.key_value(key='name', value=ExpectedJSON.FIELD_CANNOT_BE_EMPTY.value)\n        assert_status_code(response=response, expected=400)\n>       assert_json_equal_json(response=response, json=expected)\n\ntests/games/reference/languages/test_put_languages.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/base/validator.py:58: in assert_json_equal_json\n    return Assertion(response=response).assert_json_equal_json(json=json)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <source.base.validator.Assertion object at 0x7f7e38d506d0>\njson = {'name': ['This field may not be blank']}\n\n    @allure.step('Assertion of a json equal json')\n    def assert_json_equal_json(self, json):\n>       assert self.response.json() == json, f'{GlobalError.INVALID_JSON}.\\n'\\\n                                             f'Response: {self.response.json()}'\nE       AssertionError: json is not equal to json.\nE       Response: {'name': ['Это поле не может быть пустым.']}\n\nsource/base/validator.py:37: AssertionError","steps":[{"name":"Generating data based on json model <class 'source.schemas.laguage_schema.Language'>","time":{"start":1689954967041,"stop":1689954967069,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"model","value":"<class 'source.schemas.laguage_schema.Language'>"},{"name":"lang","value":"None"},{"name":"seed","value":"None"},{"name":"include","value":"None"},{"name":"exclude","value":"None"},{"name":"name","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Update the language with id \"1063\"","time":{"start":1689954967069,"stop":1689954968042,"duration":973},"status":"passed","steps":[{"name":"PUT request to 'https://games.alpha.g-spot.website/api/v1/reference/languages/1063/'","time":{"start":1689954967070,"stop":1689954968042,"duration":972},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://games.alpha.g-spot.website/api/v1/reference/languages/1063/'"},{"name":"data","value":"None"},{"name":"json","value":"{'name': ''}"},{"name":"params","value":"None"},{"name":"headers","value":"None"},{"name":"cookies","value":"None"},{"name":"auth","value":"('tester', 'tester')"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"id_data","value":"1063"},{"name":"json","value":"{'name': ''}"},{"name":"auth","value":"('tester', 'tester')"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assertion of a status code","time":{"start":1689954968042,"stop":1689954968042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"expected","value":"400"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assertion of a json equal json","time":{"start":1689954968042,"stop":1689954968042,"duration":0},"status":"failed","statusMessage":"AssertionError: json is not equal to json.\nResponse: {'name': ['Это поле не может быть пустым.']}\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/project/source/base/validator.py\", line 37, in assert_json_equal_json\n    assert self.response.json() == json, f'{GlobalError.INVALID_JSON}.\\n'\\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"json","value":"{'name': ['This field may not be blank']}"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"create_delete_test_languages::0","time":{"start":1689954968048,"stop":1689954968967,"duration":919},"status":"passed","steps":[{"name":"Delete the language with id \"1063\"","time":{"start":1689954968048,"stop":1689954968964,"duration":916},"status":"passed","steps":[{"name":"DELETE request to 'https://games.alpha.g-spot.website/api/v1/reference/languages/1063'","time":{"start":1689954968048,"stop":1689954968964,"duration":916},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://games.alpha.g-spot.website/api/v1/reference/languages/1063'"},{"name":"data","value":"None"},{"name":"json","value":"None"},{"name":"params","value":"None"},{"name":"headers","value":"None"},{"name":"cookies","value":"None"},{"name":"auth","value":"('tester', 'tester')"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"id_data","value":"1063"},{"name":"auth","value":"('tester', 'tester')"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assertion of a status code","time":{"start":1689954968964,"stop":1689954968965,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"expected","value":"204"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"feature","value":"Reference"},{"name":"suite","value":"Regression-test put languages"},{"name":"epic","value":"Games"},{"name":"story","value":"Languages"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.games.reference.languages"},{"name":"subSuite","value":"TestLanguagesUpdateRegression"},{"name":"host","value":"51456541d1fc"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.games.reference.languages.test_put_languages"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"value","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"a2e38eaae1583f60","reportUrl":"https://karbolinivan.github.io/GSPOTbackendtest/1//#testresult/a2e38eaae1583f60","status":"failed","statusDetails":"AssertionError: json is not equal to json.\nResponse: {'name': ['Это поле не может быть пустым.']}","time":{"start":1689954578679,"stop":1689954579660,"duration":981}}]},"tags":["regression"]},"source":"4f6002572dc7bd81.json","parameterValues":["''"]}