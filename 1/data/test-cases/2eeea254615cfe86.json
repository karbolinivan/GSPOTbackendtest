{"uid":"2eeea254615cfe86","name":"Test filters genres list","fullName":"tests.games.utils.test_filters_genres.TestFiltersGenres#test_filters_genres_list","historyId":"ff4a56ec4e8d8197dc64191744e9bf34","time":{"start":1689954597194,"stop":1689954597912,"duration":718},"description":"Проверка успешного ответа [200] при запросе фильтра по жанру игр","descriptionHtml":"<p>Проверка успешного ответа [200] при запросе фильтра по жанру игр</p>\n","status":"broken","statusMessage":"AttributeError: Could not map received object to pydantic model:\n[\n  {\n    \"loc\": [\n      \"subgenre\"\n    ],\n    \"msg\": \"field required\",\n    \"type\": \"value_error.missing\"\n  }\n]","statusTrace":"self = <source.base.validator.Assertion object at 0x7f8c788ae050>\nmodel = <class 'source.schemas.genre_games.GenreGames'>\n\n    @allure.step('Assertion json by the model')\n    def assert_json_by_model(self, model):\n        try:\n            if isinstance(self.response.json(), list):\n                for item in self.response.json():\n>                   model(**item)\n\nsource/base/validator.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   pydantic.error_wrappers.ValidationError: 1 validation error for GenreGames\nE   subgenre\nE     field required (type=value_error.missing)\n\npydantic/main.py:341: ValidationError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.games.utils.test_filters_genres.TestFiltersGenres object at 0x7f8c78bb6f10>\n\n    @allure.title('Test filters genres list')\n    @allure.description('Проверка успешного ответа [200] при запросе фильтра по жанру игр')\n    def test_filters_genres_list(self):\n        response = get_filters_genres_list()\n        assert_status_code(response=response, expected=200)\n>       assert_json_by_model(response=response, model=GenreGames)\n\ntests/games/utils/test_filters_genres.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/base/validator.py:50: in assert_json_by_model\n    return Assertion(response=response).assert_json_by_model(model=model)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <source.base.validator.Assertion object at 0x7f8c788ae050>\nmodel = <class 'source.schemas.genre_games.GenreGames'>\n\n    @allure.step('Assertion json by the model')\n    def assert_json_by_model(self, model):\n        try:\n            if isinstance(self.response.json(), list):\n                for item in self.response.json():\n                    model(**item)\n            else:\n                model(**self.response.json())\n        except ValidationError as e:\n>           raise AttributeError(f\"Could not map received object to pydantic model:\\n{e.json()}\")\nE           AttributeError: Could not map received object to pydantic model:\nE           [\nE             {\nE               \"loc\": [\nE                 \"subgenre\"\nE               ],\nE               \"msg\": \"field required\",\nE               \"type\": \"value_error.missing\"\nE             }\nE           ]\n\nsource/base/validator.py:24: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1689954520736,"stop":1689954520832,"duration":96},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Проверка успешного ответа [200] при запросе фильтра по жанру игр","status":"broken","statusMessage":"AttributeError: Could not map received object to pydantic model:\n[\n  {\n    \"loc\": [\n      \"subgenre\"\n    ],\n    \"msg\": \"field required\",\n    \"type\": \"value_error.missing\"\n  }\n]","statusTrace":"self = <source.base.validator.Assertion object at 0x7f8c788ae050>\nmodel = <class 'source.schemas.genre_games.GenreGames'>\n\n    @allure.step('Assertion json by the model')\n    def assert_json_by_model(self, model):\n        try:\n            if isinstance(self.response.json(), list):\n                for item in self.response.json():\n>                   model(**item)\n\nsource/base/validator.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   pydantic.error_wrappers.ValidationError: 1 validation error for GenreGames\nE   subgenre\nE     field required (type=value_error.missing)\n\npydantic/main.py:341: ValidationError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.games.utils.test_filters_genres.TestFiltersGenres object at 0x7f8c78bb6f10>\n\n    @allure.title('Test filters genres list')\n    @allure.description('Проверка успешного ответа [200] при запросе фильтра по жанру игр')\n    def test_filters_genres_list(self):\n        response = get_filters_genres_list()\n        assert_status_code(response=response, expected=200)\n>       assert_json_by_model(response=response, model=GenreGames)\n\ntests/games/utils/test_filters_genres.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/base/validator.py:50: in assert_json_by_model\n    return Assertion(response=response).assert_json_by_model(model=model)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <source.base.validator.Assertion object at 0x7f8c788ae050>\nmodel = <class 'source.schemas.genre_games.GenreGames'>\n\n    @allure.step('Assertion json by the model')\n    def assert_json_by_model(self, model):\n        try:\n            if isinstance(self.response.json(), list):\n                for item in self.response.json():\n                    model(**item)\n            else:\n                model(**self.response.json())\n        except ValidationError as e:\n>           raise AttributeError(f\"Could not map received object to pydantic model:\\n{e.json()}\")\nE           AttributeError: Could not map received object to pydantic model:\nE           [\nE             {\nE               \"loc\": [\nE                 \"subgenre\"\nE               ],\nE               \"msg\": \"field required\",\nE               \"type\": \"value_error.missing\"\nE             }\nE           ]\n\nsource/base/validator.py:24: AttributeError","steps":[{"name":"Get filters genres list","time":{"start":1689954597194,"stop":1689954597911,"duration":717},"status":"passed","steps":[{"name":"GET request to 'https://games.alpha.g-spot.website/api/v1/utils/filters/genres'","time":{"start":1689954597194,"stop":1689954597911,"duration":717},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://games.alpha.g-spot.website/api/v1/utils/filters/genres'"},{"name":"params","value":"{'limit': None, 'offset': None}"},{"name":"headers","value":"None"},{"name":"cookies","value":"None"},{"name":"auth","value":"('tester', 'tester')"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"limit","value":"None"},{"name":"offset","value":"None"},{"name":"auth","value":"('tester', 'tester')"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assertion of a status code","time":{"start":1689954597911,"stop":1689954597911,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"expected","value":"200"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assertion json by the model","time":{"start":1689954597911,"stop":1689954597912,"duration":1},"status":"broken","statusMessage":"AttributeError: Could not map received object to pydantic model:\n[\n  {\n    \"loc\": [\n      \"subgenre\"\n    ],\n    \"msg\": \"field required\",\n    \"type\": \"value_error.missing\"\n  }\n]\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/project/source/base/validator.py\", line 24, in assert_json_by_model\n    raise AttributeError(f\"Could not map received object to pydantic model:\\n{e.json()}\")\n","steps":[],"attachments":[],"parameters":[{"name":"model","value":"<class 'source.schemas.genre_games.GenreGames'>"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"Genres"},{"name":"epic","value":"Games"},{"name":"feature","value":"Utils"},{"name":"suite","value":"Test get filters genres list"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests.games.utils"},{"name":"subSuite","value":"TestFiltersGenres"},{"name":"host","value":"65d612c0faa9"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.games.utils.test_filters_genres"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"2eeea254615cfe86.json","parameterValues":[]}